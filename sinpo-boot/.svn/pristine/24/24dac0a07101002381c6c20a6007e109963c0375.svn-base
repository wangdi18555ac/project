package com.sinpo.framework.listener;

import org.apache.commons.lang.StringUtils;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import java.util.HashMap;
import java.util.Map;

/**
 * Session Attribute监听
 *
 * @author    wangdi
 * @date      2018/5/19
 */
public class LoginListener implements HttpSessionAttributeListener {

    private static final String USERID_KEY = "loginuser";

    private static final String SHOPUSERID_KEY = "loginuserShop";

    private static final String GLOBAL_USER_MAP = "app_online_users";

    /**
     * 同一个账号不同地点登录踢下线功能
     *
     * @param httpSessionBindingEvent
     */
    @Override
    public void attributeAdded(HttpSessionBindingEvent httpSessionBindingEvent) {
        //变动的值
        String keyValue = (String) httpSessionBindingEvent.getValue();
        //变动的键
        String keyName = httpSessionBindingEvent.getName();
        //判断attribute名
        if (keyName.equals(SHOPUSERID_KEY)) {
            //获取session
            HttpSession session = httpSessionBindingEvent.getSession();
            //获取application
            ServletContext app = session.getServletContext();
            //获取全局用户map
            Object obj = app.getAttribute(GLOBAL_USER_MAP);
            //声明map
            Map<String, HttpSession> globalUserMap = null;
            //如果全局map不存在,则新建
            if (obj == null) {
                globalUserMap = new HashMap<String, HttpSession>();
            } else {
                globalUserMap = (Map<String, HttpSession>) obj;
            }
            //判断map中是否存在当前userid
            if (globalUserMap.containsKey(keyValue)) {
                //获取map中的session
                HttpSession ssn = globalUserMap.get(keyValue);
                //session失效
                ssn.invalidate();
            }
            //如果用户id不为空 则存入map
            if (!StringUtils.isEmpty(keyValue)) {
                globalUserMap.put(keyValue, session);
            }
            //将全局map重新存入application
            app.setAttribute(GLOBAL_USER_MAP, globalUserMap);
        }
    }

    @Override
    public void attributeRemoved(HttpSessionBindingEvent httpSessionBindingEvent) {
    }

    @Override
    public void attributeReplaced(HttpSessionBindingEvent httpSessionBindingEvent) {
    }
}
