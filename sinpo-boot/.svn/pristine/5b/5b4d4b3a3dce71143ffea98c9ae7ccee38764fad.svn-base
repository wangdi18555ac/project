package com.sinpo.common.utils;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

/**
 * 文件操作工具类
 */
public class FileUtils {

    private static int BUFFER_SIZE = 1024;

    public static List<File> searchFiles(File dir, String endwith) {
        List<File> result = new ArrayList<>();
        for (File file : dir.listFiles()) {
            if (file.getName().endsWith(endwith)) {
                result.add(file);
            } else if (file.isDirectory()) {
                List<File> subfiles = searchFiles(file, endwith);
                result.addAll(subfiles);
            }
        }
        return result;
    }

    public static String inputstreamtostring(InputStream in) throws Exception {
        return inputstreamtostring(in, "UTF-8");
    }

    public static String inputstreamtostring(InputStream in, String encoding) throws Exception {

        ByteArrayOutputStream outStream = new ByteArrayOutputStream();
        byte[] data = new byte[BUFFER_SIZE];
        int count = -1;
        while ((count = in.read(data, 0, BUFFER_SIZE)) != -1)
            outStream.write(data, 0, count);

        data = null;
        String str = new String(outStream.toByteArray(), encoding);
        outStream.close();
        return str;
    }

    public static String readFile(String file) {
        return readFile(new File(file), "UTF-8");
    }

    public static String readFile(String file, String encoding) {
        return readFile(new File(file), encoding);
    }

    public static String readFile(File file) {
        return readFile(file, "UTF-8");
    }

    public static String readFile(File file, String encoding) {
        if (file.exists()) {
            try {
                FileInputStream fin = new FileInputStream(file);
                String txt = inputstreamtostring(fin, encoding);
                fin.close();
                return txt;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return "";
    }

    public static boolean writeFile(String filepath, String content) {
        return writeFile(new File(filepath), content, "UTF-8");
    }

    public static boolean writeFile(String filepath, String content, String encoding) {
        return writeFile(new File(filepath), content, encoding);
    }

    public static boolean writeFile(File file, String content, String encoding) {
        try {
            FileOutputStream fout = new FileOutputStream(file);
            OutputStreamWriter osw = new OutputStreamWriter(fout, encoding);
            osw.write(content);
            osw.flush();
            fout.flush();
            fout.close();
            return true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
}
