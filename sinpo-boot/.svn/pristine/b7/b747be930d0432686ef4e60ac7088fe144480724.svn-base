package com.sinpo.common.utils.email;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.PropertySource;
import org.springframework.stereotype.Component;

import javax.mail.Address;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Date;
import java.util.Properties;

/**
 * 邮件工具类
 */
@Component
@PropertySource("classpath:sinpo.properties")
public class EmailUtils {

    //邮箱用户名
    @Value("${sinpo.email.username}")
    private String username;
    //邮箱密码
    @Value("${sinpo.email.password}")
    private String password;
    //smtp协议
    @Value("${sinpo.email.smtp}")
    private String smtp;

    /* 日志log */
    private static final Logger log = LoggerFactory.getLogger(EmailUtils.class);


    /**
     * 发送HTML格式邮件
     *
     * @param to          收信人
     * @param htmlcontent html内容
     * @param subject     邮件标题
     * @return (" 3212652147 ",
     * "xeodwsflvgptdchb",
     * "3212652147@qq.com",
     * "1049053036@qq.com",
     * "smtp.qq.com",
     * "emailContent",
     * "激活验证");
     */

    public boolean sendHtmlEmail(String to, String htmlcontent, String subject) {
        log.info("EmailUtils-->SendHtmlEmail execute");
        Properties prop = new Properties();
        prop.setProperty("mail.smtp.auth", "true");//指定是否需要SMTP验证
        prop.setProperty("mail.smtp.host", smtp);//指定SMTP服务器
        prop.put("mail.transport.protocol", "smtp");
        Session session = Session.getDefaultInstance(prop);
        //session.setDebug(true);//是否在控制台显示debug信息
        try {
            /*创建邮件模块*/
            Address fromAddress = new InternetAddress(username);
            Address toAddress = new InternetAddress(to);
            Message message = new MimeMessage(session);
            message.setFrom(fromAddress);
            message.setRecipient(Message.RecipientType.TO, toAddress);
            message.setSentDate(new Date());
            message.setSubject(subject);
            message.setContent(htmlcontent, "text/html;charset = utf-8");
            message.saveChanges();
            /*发送邮件模块*/
            Transport transport = session.getTransport("smtp");
            transport.connect(smtp, username, password);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            log.info("EmailUtils-->SendHtmlEmail success to " + to);
            return true;
        } catch (Exception e) {
            log.error("EmailUtils-->SendHtmlEmail failed :" + e.getMessage());
            e.printStackTrace();
        }
        return false;
    }

    /**
     * 发送Text格式邮件
     *
     * @param to      收信人
     * @param content 邮件内容
     * @param subject 邮件标题
     * @return
     */
    public boolean sendTextEmail(String to, String content, String subject) {
        log.info("EmailUtils-->SendTextEmail execute");
        Properties prop = new Properties();
        prop.setProperty("mail.smtp.auth", "true");
        prop.setProperty("mail.smtp.host", smtp);
        prop.put("mail.transport.protocol", "smtp");
        Session session = Session.getDefaultInstance(prop);
        // session.setDebug(true);
        try {
            /*创建邮件模块*/
            Address fromAddress = new InternetAddress(username);
            Address toAddress = new InternetAddress(to);
            Message message = new MimeMessage(session);
            message.setFrom(fromAddress);
            message.setRecipient(Message.RecipientType.TO, toAddress);
            message.setSentDate(new Date());
            message.setSubject(subject);
            message.setText(content);
            message.saveChanges();
            /*发送邮件模块*/
            Transport transport = session.getTransport("smtp");
            transport.connect(smtp, username, password);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            log.info("EmailUtils-->SendTextEmail success to " + to);
            return true;
        } catch (Exception e) {
            log.error("EmailUtils-->SendTextEmail failed :" + e.getMessage());
            e.printStackTrace();
        }
        return false;
    }
}
